import{a,o as c,b as d,w as o,g as e,e as n,B as t}from"./runtime-core.esm-bundler.b1f35d24.js";var l={};const h={class:"markdown-body"},_=e("blockquote",null,[e("p",null,"Flows enable custom, event-driven data processing and task automation within Directus. Each Flow is composed of one Trigger, followed by a series of Operations.")],-1),u=e("p",null,[e("div",{class:"table-of-contents"},[e("ul",null,[e("li",null,[e("a",{href:"#what's-a-flow%3F"},"What's a Flow?")]),e("li",null,[e("a",{href:"#create-a-flow"},"Create a Flow")]),e("li",null,[e("a",{href:"#the-flow-object"},"The Flow Object")]),e("li",null,[e("a",{href:"#logs"},"Logs")])])])],-1),p=t(" ::: Before You Begin [Learn Directus](/getting-started/learn-directus) ::: "),f=e("h2",{id:"what%E2%80%99s-a-flow%3F"},[t("What\u2019s a Flow? "),e("a",{class:"header-anchor",href:"#what%E2%80%99s-a-flow%3F"},"#")],-1),w=e("p",null,[e("img",{src:"https://cdn.directus.io/docs/v9/configuration/flows/flows/flows-20220603A/whats-a-flow-20220603A.webp",alt:"What's a Flow?"})],-1),g=t("Each Flow begins with one Trigger, which defines the actions that start the Flow. Triggers can be some event or action within the app, an incoming webhook, a cron job, or manual click of a button. Please see the documentation on "),m=t("Triggers"),b=t(" for more details."),O=t("Operations are the actions performed after the Trigger, which include things like creating new Items in a Collection, sending off emails, pushing "),y=e("em",null,"in-app",-1),F=t(" notifications, or sending webhooks, just to name a few options. You can even set up divergent chains of Flow Operations, which execute conditionally, based on whether one Operation passed or failed. To ensure data is passed on as expected, a "),v=t("console log"),j=t(" is also included to help design and troubleshoot your Flows. Please see the documentation on "),k=t("Operations"),T=t(" for more details."),x=e("p",null,[t("Once a Flow is triggered, a "),e("a",{href:"#the-flow-object"},"Flow JSON Object"),t(" is created which stores data from the Trigger event. Then as each Operation in the flow executes, the data generated is added onto this Flow Object. Every Operation in a Flow has access to this Flow Object.")],-1),A=e("h2",{id:"create-a-flow"},[t("Create a Flow "),e("a",{class:"header-anchor",href:"#create-a-flow"},"#")],-1),S=e("video",{title:"",autoplay:"",muted:"",loop:"",controls:""},[e("source",{src:"https://cdn.directus.io/docs/v9/configuration/flows/flows/flows-20220603A/create-a-flow-20220603A.mp4",type:"video/mp4"})],-1),P=e("p",null,"To create a Flow, follow these steps:",-1),C=e("li",null,[t("Navigate to "),e("strong",null,"\u201CSettings > Flows\u201D"),t(" and click "),e("span",{mi:"",btn:""},"add"),t(" in the Page Header. A side menu will appear.")],-1),N=e("li",null,[t("Under "),e("strong",null,"Flow Setup"),t(", fill in a name for the Flow."),e("br"),t(" Optional: Set a status, material icon, description or color to help remember the Flow.")],-1),E=t("Select your "),$=e("strong",null,"Activity and Logs Tracking",-1),B=t(" preference as desired."),L=e("br",null,null,-1),V=t(" To learn more, please see "),W=t("Activity"),D=t(" and "),J=t("Logs"),I=t("."),G=t("Click "),H=e("span",{mi:"",btn:""},"arrow_forward",-1),Y=t(" to navigate to "),q=e("strong",null,"Trigger Setup",-1),z=t(", select a "),R=t("Trigger"),U=t(" type and configure as desired."),K=e("li",null,[t("Click "),e("span",{mi:"",btn:""},"done"),t(" in the Menu Header and you will be taken to the Flow Grid Area."),e("br"),t(" A Trigger Panel will be on the Flow Grid.")],-1),M=e("li",null,[t("On the Trigger Panel, click "),e("span",{mi:""},"add"),t(" and the "),e("strong",null,"Create Operation"),t(" side menu will open.")],-1),Q=t("Set a name, select the "),X=t("Operation"),Z=t(" type, and configure as desired."),ee=e("br",null,null,-1),te=t(" The unique name will be converted into an Operation Key, used on the "),oe=e("a",{href:"#the-flow-object"},"Flow Object",-1),se=t("."),ne=e("br",null,null,-1),ae=t(" If no name is set, a name and key will be auto-generated."),le=e("li",null,[t("When done, click "),e("span",{mi:"",btn:""},"done"),t(" in the Page Header to confirm and return to the Flow Grid Area.")],-1),ie=e("li",null,[t("On the newly created Operation Panel: "),e("ul",null,[e("li",null,[t("Click "),e("span",{mi:"",icon:""},"add"),t(" to add Operation after successful execution of the current Operation.")]),e("li",null,[t("Click "),e("span",{mi:"",icon:""},"remove"),t(" to add Operation after a failed execution of the the current Operation.")])])],-1),re=e("li",null,"Repeat steps 8-10 to create your Flow as desired.",-1),ce=e("li",null,[e("strong",null,"Optional:"),t(" To edit a Trigger or Operation Panel, click "),e("span",{mi:"",icon:""},"edit"),t(" and make edits as desired.")],-1),de=e("li",null,[e("strong",null,"Optional:"),t(" To delete an Operation Panel, click "),e("span",{mi:"",icon:""},"more_vert"),t(" and click "),e("span",{mi:"",icon:"",dngr:""},"delete"),t(".")],-1),he=e("h2",{id:"the-flow-object"},[t("The Flow Object "),e("a",{class:"header-anchor",href:"#the-flow-object"},"#")],-1),_e=e("p",null,"When a Flow is triggered, a JSON object is created to store all data generated within the Flow. When you create an Operation, a key is generated. This key is appended to the Flow Object when the Operation executes. It is used to add the associated Operation\u2019s data onto the Flows Object. As each Operation in the Flow executes, it has access to the Flow Object and therefore the data generated from preceding Operations.",-1),ue=e("p",null,[t("The following JSON object is a simple example of a Flow with two Operations. The "),e("code",{class:""},"$trigger"),t(", "),e("code",{class:""},"$last"),t(", and "),e("code",{class:""},"$accountability"),t(" keys are included on every Flow. An Operation key will be generated for each Operation that executes successfully.")],-1),pe=t(" @TODO: Uncomment once Azzy's doc is live: For more details, see the API Reference for [Flows](reference/system/flows) and [Operations](reference/system/operations). "),fe=e("pre",null,[e("code",{class:"language-JSON"},[t(`{
   `),e("span",{class:"hljs-attr"},'"$trigger"'),t(": {}, "),e("span",{class:"hljs-comment"},"// Data generated by the Flow's Trigger."),t(`
   `),e("span",{class:"hljs-attr"},'"$last"'),t(": "),e("span",{class:"hljs-literal"},"null"),t(", "),e("span",{class:"hljs-comment"},"// Data from the last Operation in the flow, for easy access!"),t(`
   `),e("span",{class:"hljs-attr"},'"$accountability"'),t(": {}, "),e("span",{class:"hljs-comment"},"// Provides details on who/what tripped the Trigger and generated this Flow Object."),t(`
   `),e("span",{class:"hljs-attr"},'"operation_key"'),t(": { "),e("span",{class:"hljs-comment"},"// The data (if any) generated by the first Operation."),t(`
			`),e("span",{class:"hljs-attr"},'"some_nested_key"'),t(": "),e("span",{class:"hljs-string"},'"Some nested value."'),t(`,
    },
	`),e("span",{class:"hljs-attr"},'"operation_key_2"'),t(": "),e("span",{class:"hljs-literal"},"null"),t(", "),e("span",{class:"hljs-comment"},"// Value is null if no data was generated during an Operation."),t(`
}
`)])],-1),we=e("h3",{id:"flow-variables"},[t("Flow Variables "),e("a",{class:"header-anchor",href:"#flow-variables"},"#")],-1),ge=e("p",null,"The Flow Object keys serve as variables, allowing data access from every Flow Operation. Variables must be passed using the following double-moustache syntax. You can even use dot-notation to extract sub-nested values.",-1),me=e("pre",null,[e("code",{class:"language-JSON"},[t(`{
   `),e("span",{class:"hljs-attr"},'"operation_key_3"'),t(`: {
			`),e("span",{class:"hljs-attr"},'"user"'),t(": "),e("span",{class:"hljs-string"},'"{{ $accountability.user }}"'),t(`,
	 }
}
`)])],-1),be=e("h2",{id:"logs"},[t("Logs "),e("a",{class:"header-anchor",href:"#logs"},"#")],-1),Oe=e("video",{title:"",autoplay:"",muted:"",loop:"",controls:""},[e("source",{src:"https://cdn.directus.io/docs/v9/configuration/flows/flows/flows-20220603A/logs-20220603A.mp4",type:"video/mp4"})],-1),ye=e("p",null,"Logs, accessed from the Sidebar, store a log of information for each Flow execution. Each log will display information from Triggers as well as each Operation.",-1),Fe={title:"Flows",modularExtension:!1},ve={name:"flows",setup(je,{expose:i}){return i({frontmatter:{title:"Flows",modularExtension:!1}}),(ke,Te)=>{const s=a("router-link"),r=a("docswrapper");return c(),d(r,{frontmatter:Fe},{default:o(()=>[e("div",h,[_,u,p,f,w,e("p",null,[g,n(s,{to:"/docs/configuration/flows/triggers"},{default:o(()=>[m]),_:1}),b]),e("p",null,[O,y,F,n(s,{to:"/docsconfiguration/flows/operations/#log-to-console"},{default:o(()=>[v]),_:1}),j,n(s,{to:"/docs/configuration/flows/operations"},{default:o(()=>[k]),_:1}),T]),x,A,S,P,e("ol",null,[C,N,e("li",null,[E,$,B,L,V,n(s,{to:"/docs/reference/system/activity/"},{default:o(()=>[W]),_:1}),D,n(s,{to:"/docs/#logs"},{default:o(()=>[J]),_:1}),I]),e("li",null,[G,H,Y,q,z,n(s,{to:"/docsconfiguration/flows/triggers"},{default:o(()=>[R]),_:1}),U]),K,M,e("li",null,[Q,n(s,{to:"/docsconfiguration/flows/operations"},{default:o(()=>[X]),_:1}),Z,ee,te,oe,se,ne,ae]),le,ie,re,ce,de]),he,_e,ue,pe,fe,we,ge,me,be,Oe,ye])]),_:1})}}};typeof l=="function"&&l(ve);export{ve as default,Fe as frontmatter};
